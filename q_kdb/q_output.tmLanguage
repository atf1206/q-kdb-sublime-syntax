<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">

<plist version="1.0">

<!-- actual syntax highlighting for q output -->
<dict>
	<key>fileTypes</key>
	<array>
		<string>mly</string>
	</array>
	<key>foldingStartMarker</key>
	<string>%{|%%</string>
	<key>foldingStopMarker</key>
	<string>%}|%%</string>
	<key>keyEquivalent</key>
	<string>^~O</string>
	<key>name</key>
	<string>q output</string>

	<key>patterns</key>
	<array>

		<dict>
			<key>comment</key>
			<string>Variable Definition</string>
			<key>name</key>
			<string>source.q_output</string>
			<key>match</key>
			<string>(^error:)\s*(.*)</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>message.error.q_output</string>
				</dict>
			</dict>
		</dict>

		<dict>
			<key>match</key>
			<string>\|</string>
			<key>name</key>
			<string>message.error.q_output</string>
		</dict>


		<dict>
			<key>include</key>
			<string>source.q</string>
		</dict>

		<!-- If dashed line (sometimes with | for keyed table), then use table formatting (aka ocaml, as in original sublime q syntax) -->
		<dict>
			<key>begin</key>
			<string>^(-+(\| -+)?)\n</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>message.error.q_output</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>message.error.q_output</string>
				</dict>
			</dict>
			<!-- <key>name</key> -->
			<!-- <string>message.error.q_output</string> -->
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.ocaml</string>
				</dict>
			</array>
			<key>end</key>
			<string>'the road goes on forever and the pattern never ends'</string>
			<!-- <key>endCaptures</key> -->
		</dict>


<!-- 		<dict>
			<key>begin</key>
			<string>(%{)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.header.begin.q_output</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\s*(%})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.header.end.q_output</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.header.q_output</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.ocaml</string>
				</dict>
			</array>
		</dict> -->

<!-- 		<dict>
			<key>begin</key>
			<string>(?&lt;=%})\s*$</string>
			<key>end</key>
			<string>(?:^)(?=%%)</string>
			<key>name</key>
			<string>meta.declarations.q_output</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#declaration-matches</string>
				</dict>
			</array>
		</dict> -->

<!-- 		<dict>
			<key>begin</key>
			<string>(%%)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.rules.begin.q_output</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\s*(%%)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.rules.end.q_output</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.rules.q_output</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#rules</string>
				</dict>
			</array>
		</dict> -->

<!-- 		<dict>
			<key>match</key>
			<string>(’|‘|“|”)</string>
			<key>name</key>
			<string>invalid.illegal.unrecognized-character.ocaml</string>
		</dict> -->

	</array>

	<key>scopeName</key>
	<string>source.q_output</string>
	<key>uuid</key>
	<string>78f9cbae-d4e1-3927-c4ce-fb8846731375</string>
</dict>
</plist>
