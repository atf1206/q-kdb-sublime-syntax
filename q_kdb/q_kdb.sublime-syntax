%YAML 1.2
---
name: q kdb
file_extensions:
  - q
scope: source.q

contexts:
  main:
    # comments
    - include: comments

    # system commands
    - match: ^\\\S+\n
      scope: other.source.q

    # built-in namespaces
    - match: \.[qQhkoz]\.\w+
      scope: support.function.q

    # strings
    - match: \"
      scope: string.quoted.string.source.q
      push:
        - meta_scope: string.quoted.string.source.q
        # special escape characters
        - match: \\[trn\\\"]
          scope: constant.numeric.complex.source.q
        # escape 3 digit numbers in strings (unicode)
        - match: \\[0-9]{3}
          scope: constant.numeric.complex.source.q
        # alert on escaped 1 or 2 digit numbers
        - match: \\[0-9]{1,2}
          scope: message.error.q
        - match: \"
          scope: string.unquoted.string.source.q
          pop: true

    # symbols
    - match: '`[:/a-zA-Z0-9_.]+'
      scope: string.interpolated.symbol.source.q

    # variable definitions
    - match: (?=([^a-zA-Z0-9]|\b))(\.?[a-zA-Z]+[a-zA-Z0-9_\.]*\s*)(::|:)\s*
      scope: other.source.q
      captures:
        2: variable.parameter.complex.source.q
        3: support.function.q

    # functions and function arguments
    - match: (\{\s*\[)
      scope: meta.function.parameters.q
      push:
        - meta_scope: meta.function.parameters.q
        - match: \b([a-zA-Z_][a-zA-Z0-9_]*)\s*(?:(;)|(?=[\]\)]))
          captures:
            1: entity.other.inherited-class.q
            2: punctuation.separator.parameters.q
        - match: \]
          pop: true

    # q reserved words
    - match: tons
      scope: keyword.other.complex.source.q
      captures:
        2: keyword.other.complex.source.q

    # datetime and timestamp
    - match: (?=(\W|\b))([0-9]{4}\.[0-9]{2}\.[0-9]{2}[TD]?[0-9]{2}:[0-9]{2}:[0-9]{2}(:[0-9]{2})?(\.[0-9]{3,6})?)(?=(\W|\b))
      scope: other.source.q
      captures:
        2: constant.numeric.complex.source.q

    # time
    - match: (?=(\W|\b))([0-9]{4}\.[0-9]{2}\.[0-9]{2}\.[0-9]{2}[TD]?)(?=(\W|\b))
      scope: other.source.q
      captures:
        2: constant.numeric.complex.source.q

    # date
    - match: (?=(\W|\b))([0-9]{2}:[0-9]{2}:[0-9]{2}(:[0-9]{2})?(\.[0-9]{3,6})?)(?=(\W|\b))
      scope: other.source.q
      captures:
        2: constant.numeric.complex.source.q

    # special I/O functions
    - match: '0:|1:'
      scope: string.quoted.double.json

    # boolean, short, int, long, float, real
    - match: (?=(\W|\b))([-]?[0-9]+[bhijfe]{0,1}(\.[0-9]+[m]?)?|0x[a-f0-9]+)(?=(\W|\b))
      scope: other.source.q
      captures:
        2: constant.numeric.complex.source.q


comments:
  # block comments
  - match: ^\s*/\s*\n
    scope: comment.block.source.q
    push:
      - meta_scope: comment.block.source.q
      - match: ^\s*\\
        pop: true
  # single line comments
  - match: \s/.+$\n?|^/.+$\n?
    scope: comment.block.source.q


